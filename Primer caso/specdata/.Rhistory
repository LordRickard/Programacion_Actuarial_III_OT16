control l
?rnorm
help.search "rnorm"
help.search("rnorm")
args(rnorm)
rnorm(100,0,1)
set.seed(1)
rnorm(10)
norm10
rnorm(19)
rnorm(10)
pene
help()
??crystel
?pca
clearPushBack()
clear
## Descarga de datos desde internet
a<-available.packages()
head(a,3)
head(rownames(a),3)
n<-signif(nrow(a),2)
:()
install.packages("ggplot2")
library("ggplot2")
Source("http://bioconductor.org/bioLite.R")
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
installed.packages()
library(ggplot2)
require(ggplot2)
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
sudo sh -c "echo 'deb http://streaming.stat.iastate.edu/CRAN/bin/linux/ubuntu quantal/' >>  /etc/apt/sources.list"
sudo apt-get update
sudo apt-get install r-base r-base-dev
install.packages("codetools")
install.packages("Rtools")
install.packages("devtools")
exit
close
install.packages("Rtools")
install.packages("rmarkdown")
x <- 1
1 -> y
print(x)
x
x+y
msg <- "hola!
msg <- "hola"
msg
msg
x <- ##Esto es un comentario
y
x <-2
y
x<-1:20
print(x)
vector
vector()
?`vector-class`
?vector
vector(mode= "numeric", length = 5)
a<-vector(mode= "numeric", length = 5)
a<-vector(mode= "numeric", length = 5)7
1/3
1L/3
1/3L
(1/3)L
1.5l
1.5L
class(1)
class(1L)
1/0
1/0*8
LUK
0/0
1/0
0/1
attributes(x)
attributes()
attributes(1)
?attributes
attributes(airquality)
airquality
asdad
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
dim(m) <-c(3,2)
m
m <- matrix(nrow=2, ncol=3)
m <- matrix(1:6,3,2)
m
m
m
m <- matrix(1:6,3,2,TRUE)
m
m
m <- matrix(1:6,3,3,T)
m
class(m)
```{r pressure, echo=FALSE}
---
dim(m) < - c(2,5)
m <- matrix(1:6,3,3,T)
m
class(m)
dim(m) < - c(2,5)
dim(m)<-c(2,5)
z
z
dim(m)<-c(2,5)
x <- c(1,2,3)
y <- c("a","b","c")
z <- c(x,y)
z
m1 <- rbind (m,x)
m1
m2
m2 <- cbind(m,x)
m2
m1 <- rbind(m1,y)
m1
install.packages("knitr")
install.packages("knitr")
library(knitr)
> kable(head(iris[,1:3]), format = "markdown")
|  Sepal.Length|  Sepal.Width|  Petal.Length|
|-------------:|------------:|-------------:|
|           5,1|          3,5|           1,4|
|           4,9|          3,0|           1,4|
|           4,7|          3,2|           1,3|
|           4,6|          3,1|           1,5|
|           5,0|          3,6|           1,4|
|           5,4|          3,9|           1,7|
|           5,4|          3,9|           1,7|
> kable(head(iris[,1:3]), format = "markdown")
library(devtools)
2$bar
x <- list(foo=1:4, bar=.6)
2$foo
x$foo
x$foo[2]
x <- list(foo=1:4,bar=0.6,baz="Hola")
x[c(1,3)]
x[[c(1,3)]
x[[c(1,3)]
x[[c(1,3)]]
name <- "foo"
x[[name]]
x$name
x[[1]][[3]]
x[[1]][3]
x <- matrix(1:6,2,3)
x
x[1,2]
x[2,1]
x[1,]
x[,3]
x[1,2,drop=F]
x <- list(aardvark=1:5)
x$a
x$w
x$r
x [["a"]]
x[["a",exact=F]]
airquality[1:6,0]
airquality[1:6,0]
airquality[1:6,0]
airquality[1:6,0]
airquality[1:6,]
airquality
airquality[1:6,]
completos <- complete.cases(airquality)
completos
airquality
completos <- complete.cases(airquality)
airquality[completos]
airquality[completos,]
airquality[completos,1:6]
airquality[completos,1:6]
airquality[completos,][1:6]
airquality[completos,][1:6,]
airquality[1:6][completos]
airquality[1:6,][completos,]
x <- 1:4; y <- 6:9
x+y
x <- 1:4; y <- 6:8
x+y
x + y
x > 2
x >=2
y ==8
y == 8
x <- 1:4; y <- 6:9
y == 8
x*y
x/y
x <- matrix(1:4, 2,2)
x
x <- matrix(1:4,2,2)
x
x <- matrix(1:4,2,2); y <- matrix(rep(10,4),2,2)
x
y
x*y
x/y
x%%y
x%*%y
repeat 1+1
?seq_along
for(i in x){print(x[i,])}
x <- matrix(1:6,2,3)
for(i in x){print(x[i,])}
x
for(i in x){print(x[i,i+1])}
for(i in seq_along(x)){print(x[i,])}
for(i in seq_along(x)){print(x[i,1])}
for(i in seq_along(x)){print(x[i,i])}
for(i in seq_along(x)){print(x)}
for(i in seq_along(x)){print(x[1])}
for(i in seq_along(x)){print(x[i])}
for(i in seq_along(x)){print(x[i,x])}
x <- matrix(1:6,2,3)
x[1,2]
x[1,]
x[2,1]
for(i in seq_along(x)){print(x[i])}
for(i in seq_along(x)){print(x[i-1])}
for(i in seq_along(x)){print(x[,i])}
for(i in seq_along(x)){print(x[1,i])}
print(x[i,j])
for(i in seq_len(nrow(x))){
for(j in seq_len(ncol(x))){
print(x[i,j])
}
}
for(i in 1:100){
if(i<=20){
next
}
}
for(i in 1:100){
if(i<=20){
next
}
print i
}
for(i in 1:100){
if(i<=20){
next
}
print(i)
}
suma2(1,2)
suma2 <- function(x,y){
x+y
}
suma2(2,3)
mayor10 <- function(x){
x[x>10]
}
mayor10(4)
mayor10(1:20)
mayor10(runif(100,5,15))
mayorque <- function(x,n){
x[x>n]
}
mayorque(1:10,3)
promedioCol <- function(x, quitar.NA=TRUE) {
nc <- ncol(x)
medias <- vector("numeric",nc)
for(i in 1:nc){
medias[i] <- mean(x[,i], na.rm = quitar.NA)
}
}
promedioCol(c(1,2,3,NA))
promedioCol(as.dataframe(c(1,2,3,NA)))
promedioCol <- function(x, quitar.NA=TRUE) {
nc <- ncol(x)
medias <- vector("numeric",nc)
for(i in 1:nc){
medias[i] <- mean(x[,i], na.rm = quitar.NA)
}
medias
}
promedioCol(as.dataframe(c(1,2,3,NA)))
promedioCol(airquality)
f <- function(a,b){
a^2
}
f(2)
f(NA)
f <- function(a,b){
print(a)
print(b)
}
f(3,2)
f(2)
?plot
?paste
?paste
mediacontaminante = function(directorio, contaminante, id= 1:332){
}
View(mediacontaminante)
h2?
?h2
#Caso 1.
mediacontaminante = function(directorio,contaminante,id=1:332){
x <- vector("numeric")
suma <- 0
for (i in id){
if (i<10){
x <- paste("00",i,".csv", sep="") }
else {
if (i>=10 && i<100){
x <- paste("0",i,".csv", sep="") }
else {
x <- paste(i,".csv", sep="") }
}
y <- read.csv(x)
z <- c(y[,contaminante])
medias <- mean(z,na.rm=TRUE)
suma <- suma + medias
}
prom <- suma/length(id)
prom
}
mediacontaminante("specdata","sulfate",1:2 )
setwd("~/GitHub/Programacion_Actuarial_III_OT16")
#Caso 1.
mediacontaminante = function(directorio,contaminante,id=1:332){
x <- vector("numeric")
suma <- 0
for (i in id){
if (i<10){
x <- paste("00",i,".csv", sep="") }
else {
if (i>=10 && i<100){
x <- paste("0",i,".csv", sep="") }
else {
x <- paste(i,".csv", sep="") }
}
y <- read.csv(x)
z <- c(y[,contaminante])
medias <- mean(z,na.rm=TRUE)
suma <- suma + medias
}
prom <- suma/length(id)
prom
}
mediacontaminante("specdata","sulfate",1:2 )
completos<-function(directorio,id=1:332){
j<-vector("numeric")
n<- vector("numeric")
x <- vector("numeric")
suma <- 0
for (i in id){
if ((i>=1) && (i<10)){
x <- paste("00",i,".csv", sep="") }
else {
if (i>=10 && i<100){
x <- paste("0",i,".csv", sep="") }
else {
x <- paste(i,".csv", sep="") }
}
y<-read.csv(x)
completos<-complete.cases(y)
j<-completos[completos==TRUE]
z<-length(j)
n<-c(n,z)
}
resultado <- data.frame(id=id,nobs=n)
resultado
}
completos("specdata")
setwd("~/GitHub/Programacion_Actuarial_III_OT16/Primer caso/specdata")
completos<-function(directorio,id=1:332){
j<-vector("numeric")
n<- vector("numeric")
x <- vector("numeric")
suma <- 0
for (i in id){
if ((i>=1) && (i<10)){
x <- paste("00",i,".csv", sep="") }
else {
if (i>=10 && i<100){
x <- paste("0",i,".csv", sep="") }
else {
x <- paste(i,".csv", sep="") }
}
y<-read.csv(x)
completos<-complete.cases(y)
j<-completos[completos==TRUE]
z<-length(j)
n<-c(n,z)
}
resultado <- data.frame(id=id,nobs=n)
resultado
}
completos("specdata")
completos("specdata",c(2,4,8,10,12))
completos("specdata",c(3))
mediacontaminante = function(directorio,contaminante,id=1:332){
x <- vector("numeric")
suma <- 0
for (i in id){
if (i<10){
x <- paste("00",i,".csv", sep="") }
else {
if (i>=10 && i<100){
x <- paste("0",i,".csv", sep="") }
else {
x <- paste(i,".csv", sep="") }
}
y <- read.csv(x)
z <- c(y[,contaminante])
medias <- mean(z,na.rm=TRUE)
suma <- suma + medias
}
prom <- suma/length(id)
prom
}
mediacontaminante("specdata","sulfate",1:2 )
getwd()
setwd("~/GitHub/Programacion_Actuarial_III/specdata")
corr <- function(directorio, horizonte= 0){
x <- vector("numeric")
t <- vector("numeric")
for (i in 1:332){
datos<-formatC(i,width = 3 ,flag = "0")
numar <- read.csv(paste(datos, ".csv",sep=""), header=T)
casosc <- complete.cases(numar)
j <- numar[casosc,]
if (i >= horizonte) {
x <-  cor(j[2],j[3])
y <-as.vector(x)
t <- c(t,y)
}
}
t
}
corr <- function(directorio, horizonte= 0){
x <- vector("numeric")
t <- vector("numeric")
for (i in 1:332){
datos<-formatC(i,width = 3 ,flag = "0")
numar <- read.csv(paste(datos, ".csv",sep=""), header=T)
casosc <- complete.cases(numar)
j <- numar[casosc,]
if (i >= horizonte) {
x <-  cor(j[2],j[3])
y <-as.vector(x)
t <- c(t,y)
}
}
t
}
corr("specdata",10)
corr("specdata",150)
setwd("~/GitHub/Programacion_Actuarial_III_OT16/Primer caso/specdata")
corr = function(directorio, horizonte= 0){
x <- vector("numeric")
t <- vector("numeric")
for (i in 1:332){
datos<-formatC(i,width = 3 ,flag = "0")
numar <- read.csv(paste(datos, ".csv",sep=""), header=T)
casosc <- complete.cases(numar)
j <- numar[casosc,]
if (i >= horizonte) {
x <-  cor(j[2],j[3])
y <-as.vector(x)
t <- c(t,y)
}
}
t
}
corr("specdata",10)
