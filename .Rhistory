control l
?rnorm
help.search "rnorm"
help.search("rnorm")
args(rnorm)
rnorm(100,0,1)
set.seed(1)
rnorm(10)
norm10
rnorm(19)
rnorm(10)
pene
help()
??crystel
?pca
clearPushBack()
clear
## Descarga de datos desde internet
a<-available.packages()
head(a,3)
head(rownames(a),3)
n<-signif(nrow(a),2)
:()
install.packages("ggplot2")
library("ggplot2")
Source("http://bioconductor.org/bioLite.R")
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
installed.packages()
library(ggplot2)
require(ggplot2)
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
sudo sh -c "echo 'deb http://streaming.stat.iastate.edu/CRAN/bin/linux/ubuntu quantal/' >>  /etc/apt/sources.list"
sudo apt-get update
sudo apt-get install r-base r-base-dev
install.packages("codetools")
install.packages("Rtools")
install.packages("devtools")
exit
close
install.packages("Rtools")
install.packages("rmarkdown")
x <- 1
1 -> y
print(x)
x
x+y
msg <- "hola!
msg <- "hola"
msg
msg
x <- ##Esto es un comentario
y
x <-2
y
x<-1:20
print(x)
vector
vector()
?`vector-class`
?vector
vector(mode= "numeric", length = 5)
a<-vector(mode= "numeric", length = 5)
a<-vector(mode= "numeric", length = 5)7
1/3
1L/3
1/3L
(1/3)L
1.5l
1.5L
class(1)
class(1L)
1/0
1/0*8
LUK
0/0
1/0
0/1
attributes(x)
attributes()
attributes(1)
?attributes
attributes(airquality)
airquality
asdad
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
dim(m) <-c(3,2)
m
m <- matrix(nrow=2, ncol=3)
m <- matrix(1:6,3,2)
m
m
m
m <- matrix(1:6,3,2,TRUE)
m
m
m <- matrix(1:6,3,3,T)
m
class(m)
```{r pressure, echo=FALSE}
---
dim(m) < - c(2,5)
m <- matrix(1:6,3,3,T)
m
class(m)
dim(m) < - c(2,5)
dim(m)<-c(2,5)
z
z
dim(m)<-c(2,5)
x <- c(1,2,3)
y <- c("a","b","c")
z <- c(x,y)
z
m1 <- rbind (m,x)
m1
m2
m2 <- cbind(m,x)
m2
m1 <- rbind(m1,y)
m1
install.packages("knitr")
install.packages("knitr")
library(knitr)
> kable(head(iris[,1:3]), format = "markdown")
|  Sepal.Length|  Sepal.Width|  Petal.Length|
|-------------:|------------:|-------------:|
|           5,1|          3,5|           1,4|
|           4,9|          3,0|           1,4|
|           4,7|          3,2|           1,3|
|           4,6|          3,1|           1,5|
|           5,0|          3,6|           1,4|
|           5,4|          3,9|           1,7|
|           5,4|          3,9|           1,7|
> kable(head(iris[,1:3]), format = "markdown")
library(devtools)
x
x <- factor(c("si","no","si", "si","no","si","no"))
#distingue los valores
x
table(x)
unclass(x)
x <- factor(c("si","no","si", "si","no","si","no"),levels=c("si","no"))
x <- factor(c("azul","azul","rojo","azul","amarillo","verde","azul"))
x
table(x)
#Valores faltantes
x <- c(1,2,NaN,10,3)
is.na(x)
is.nan(x)
x <- data.frame(Erick=1:4, Lori=c(T,T,F,F))
row.names(x) <-c("Primero","Segundo","Tercero","Cuarto")
x
nrow(x)
ncol(x)
attributes(x)
names(x) <-c("Yarely","Karen")
x
x<-1:3
names(x) #null
names(x) <- c("Hugo","Paco","Luis")
x
x<- list(a=1:10,b=100:91,c=51:60)
x
names(x) <- c("Seq1","Seq2","Seq3")
x
#para matricerls
m <- matrix(1:4,2,2)
m
attributes(m)
dimnames(m) <- list(c("Fil1","Fil2"),c("Col1","Col2"))
m
m <- matrix(NA,5,5)
m
dimnames(m) <- list(c(1:5),c("A","B","C","D","F"))
m
data <-read.csv("Datos_S&P.csv")
data <-read.table("Datos_S&P.csv",T,",")
data
setwd("~/GitHub/Programacion_Actuarial_III_OT16")
data <-read.csv("Datos_S&P.csv")
data
asd
as.logical("nacho")
x <- factor(c("si","no","si", "si","no","si","no"))
x
table(x)
m <- matrix(1:6,2,3)
m
m <- matrix("1",T,3,"4",2,3)
x<- list(a=1:10,b=100:91,c=51:60)
x
x <- data.frame(Erick=1:4, Lori=c(T,T,F,F))
x
table(x)
x <- factor(c("si","no","si", "si","no","si","no"),levels=c("si","no"))
x <- factor(c("azul","azul","rojo","azul","amarillo","verde","azul"))
x
x <- factor(c("si","no","si", "si","no","si","no"),levels=c("si","no"))
x
x <- factor(c("si","no","si", "si","no","si","no"))
#distingue los valores
x
x <- data.frame(Erick=1:4, Lori=c(T,T,F,F))
x <- factor(c(x))
sort.list(x)
?atomic
list(x)
w<- factor(x)
w <- factor(x <- data.frame(Erick=1:4, Lori=c(T,T,F,F)))
w <- factor(c(x <- data.frame(Erick=1:4, Lori=c(T,T,F,F))))
table(x)
x <- data.frame(Erick=1:4, Lori=c(T,T,F,F))
table(x)
x <- data.frame(Erick=1:4, Lori=c(T,T,F,F))
row.names(x) <-c("Primero","Segundo","Tercero","Cuarto")
x
class(x)
table(x)
x <- data.frame(Erick=1:4, Lori=c(T,T,F,F))
row.names(x) <-c("Primero","Segundo","Tercero","Cuarto")
x
table(x)
x <- data.frame(Erick=1:4, Lori=c(T,T,F,F),Jarl=c(1+1i,1i,2+3i))
x <- data.frame(Erick=1:4, Lori=c(T,T,F,F),Jarl=c(1+1i,1i,2+3i,3+4i))
row.names(x) <-c("Primero","Segundo","Tercero","Cuarto")
x
table(x)
table(x)
